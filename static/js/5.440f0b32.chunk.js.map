{"version":3,"sources":["modules/misc/index.js","constants/constants.js","components/reusable/Button.js","hooks/useData.js","components/table/Table.js","components/table/TableSection.js"],"names":["exportToJson","data","query","fileName","fileType","blob","Blob","type","a","document","createElement","download","href","window","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","downloadFile","JSON","stringify","classNames","classes","filter","Boolean","join","TABLE_NAMES","Button","children","className","handleClick","onClick","PageButton","rest","useData","tableName","useState","setData","error","setError","runtime","setRuntime","useEffect","t0","performance","now","find","name","fetch","getURL","headers","Accept","then","res","ok","json","Error","alasql","promise","toast","success","catch","e","message","convertToJson","atob","content","replace","fetchData","t1","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","onChange","useAsyncDebounce","undefined","Helmet","target","placeholder","Table","columns","completeData","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","previousPage","nextPage","canPreviousPage","canNextPage","state","setPageSize","pageOptions","gotoPage","pageCount","filename","xmlns","fill","viewBox","stroke","id","strokeLinecap","strokeLinejoin","strokeWidth","d","map","headerGroup","getHeaderGroupProps","column","scope","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","disabled","pageIndex","pageSize","Number","fillRule","clipRule","TableSection","React","memo","isOpen","useMemo","Object","keys","key","Header","accessor","queryData","slice","role","toFixed","src","Loader","alt"],"mappings":"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","file":"static/js/5.440f0b32.chunk.js","sourcesContent":["const downloadFile = ({ data, fileName, fileType }) => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  const clickEvt = new MouseEvent(\"click\", {\n    view: window,\n    bubbles: true,\n    cancelable: true,\n  });\n  a.dispatchEvent(clickEvt);\n  a.remove();\n};\n\nexport const exportToJson = (data, query) => {\n  downloadFile({\n    data: JSON.stringify(data),\n    fileName: `${query}.json`,\n    fileType: \"text/json\",\n  });\n};\n\nexport function classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n","const TABLE_NAMES = [\n  \"categories\",\n  \"customers\",\n  \"employees\",\n  \"orders\",\n  \"products\",\n  \"regions\",\n];\n\nexport default TABLE_NAMES;\n","import React from \"react\";\nimport { classNames } from \"../../modules/misc\";\n\nexport const Button = ({ children, className, handleClick }) => {\n  return (\n    <button\n      className={classNames(\n        \"bg-primary-dark transition-colors text-white rounded-md font-semibold px-4 py-2 my-4 shadow-lg btnhover\",\n        className\n      )}\n      onClick={handleClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport const PageButton = ({ children, className, ...rest }) => {\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 \",\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport alasql from \"alasql\";\nimport toast from \"react-hot-toast\";\nimport TABLE_NAMES from \"../constants/constants\";\n\nconst getURL = (name) =>\n  `https://api.github.com/repos/graphql-compose/graphql-compose-examples/contents/examples/northwind/data/csv/${name}.csv`;\n\nconst useData = (tableName) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(false);\n  const [runtime, setRuntime] = useState(\"\");\n  const convertToJson = (data) => {\n    alasql\n      .promise(\"SELECT * FROM CSV(?, {headers: false, separator:','})\", [data])\n      .then((data) => {\n        setData(data);\n        toast.success(\"Query run successfully\");\n      })\n      .catch((e) => {\n        toast.error(e.message);\n      });\n  };\n\n  useEffect(() => {\n    const fetchData = (tableName) => {\n      setData([]);\n      const name = TABLE_NAMES.find((name) => name === tableName);\n      if (name) {\n        setError(false);\n        fetch(getURL(tableName), {\n          headers: {\n            Accept: \"application/vnd.github.v4+raw\",\n          },\n        })\n          .then((res) => {\n            if (res.ok) {\n              return res.json();\n            } else {\n              throw new Error(\"Something went wrong\");\n            }\n          })\n          .then((data) => convertToJson(atob(data.content.replace(\"\\n\", \"\"))))\n          .catch((error) => {\n            toast.error(error.message);\n          });\n      } else {\n        setError(true);\n        toast.error(\"Please enter a valid query\");\n      }\n    };\n    let t0 = performance.now(); //start time\n    fetchData(tableName);\n    let t1 = performance.now(); //end time\n    setRuntime(t1 - t0);\n  }, [tableName]);\n\n  return { data, runtime, error };\n};\n\nexport default useData;\n","import React, { useState } from \"react\";\nimport {\n  useTable,\n  useGlobalFilter,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n} from \"react-table\";\nimport { Button, PageButton } from \"../reusable/Button\";\nimport CsvDownload from \"react-json-to-csv\";\nimport { Helmet } from \"react-helmet\";\nimport { exportToJson } from \"../../modules/misc\";\nimport \"../layouts/Mycss.css\"\n\nconst GlobalFilter = ({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) => {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = useState(globalFilter);\n  const onChange = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${count} Records found || React SQL Editor`}</title>\n      </Helmet>\n      <label className=\"flex gap-x-2 items-baseline\">\n        <span className=\"text_color hidden md:inline-block font-semibold\">\n          Search:{\" \"}\n        </span>\n        <input\n          type=\"text\"\n          className=\"text-primary-dark rounded-md shadow-sm outline-none border-2 border-gray-300 focus:border-primary-dark transition p-2 w-40 md:w-52 \"\n          value={value || \"\"}\n          onChange={(e) => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n          }}\n          placeholder={`${count} records...`}\n        />\n      </label>\n    </>\n  );\n};\n\nconst Table = ({ columns, data, completeData, query }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    previousPage,\n    nextPage,\n    canPreviousPage,\n    canNextPage,\n    state,\n    setPageSize,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setGlobalFilter,\n    preGlobalFilteredRows,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n  return (\n    <>\n      <div className=\"flex justify-between items-center\">\n        <GlobalFilter\n          preGlobalFilteredRows={preGlobalFilteredRows}\n          globalFilter={state.globalFilter}\n          setGlobalFilter={setGlobalFilter}\n        />\n        <div>\n          <CsvDownload\n            className=\"bg-primary-dark transition-colors text-white rounded-md font-semibold px-4 py-2 mr-3 shadow-lg atlancolor btnhover\"\n            data={completeData}\n            filename={`${query}.csv`}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 mr-2 inline\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title id=\"download\">Download CSV</title>\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n              />\n            </svg>{\" \"}\n            CSV\n          </CsvDownload>\n          <Button className={'atlancolor'} handleClick={() => exportToJson(completeData, query)}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 mr-2 inline \"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <title id=\"download\">Download JSON</title>\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n              />\n            </svg>\n            JSON\n          </Button>\n        </div>\n      </div>\n\n      {/* table */}\n      <div className=\"shadow overflow-auto border-b border-gray-200 sm:rounded-lg \">\n        <table\n          {...getTableProps()}\n          className=\"min-w-full divide-y divide-gray-200 \"\n        >\n          <thead className=\"bg-primary-dark\">\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-4 text-left text-xs font-medium text-white  uppercase tracking-wider atlancolor\"\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    <span className=\" hover:text-gray-300\">\n                      {column.render(\"Header\")}\n                    </span>\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? \" ▼\"\n                          : \" ▲\"\n                        : \"\"}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody\n            {...getTableBodyProps()}\n            className=\"bg-white text-black divide-y divide-gray-200\"\n          >\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\"\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      {/* Pagination */}\n      <div className=\"py-3 flex items-center justify-between\">\n        <div className=\"flex-1 flex justify-between sm:hidden\">\n          <Button\n            handleClick={() => previousPage()}\n            disabled={!canPreviousPage}\n          >\n            Previous\n          </Button>\n          <Button handleClick={() => nextPage()} disabled={!canNextPage}>\n            Next\n          </Button>\n        </div>\n        <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n          <div className=\"flex gap-x-2\">\n            <span className=\"text-sm text-gray-700\">\n              Page <span className=\"font-medium\">{state.pageIndex + 1}</span> of{\" \"}\n              <span className=\"font-medium\">{pageOptions.length}</span>\n            </span>\n            <select\n              className=\"text-black outline-none bg-white border-2 border-transparent focus:border-primary-dark rounded-md cursor-pointer\"\n              value={state.pageSize}\n              onChange={(e) => {\n                setPageSize(Number(e.target.value));\n              }}\n            >\n              {[5, 10, 20].map((pageSize) => (\n                <option key={pageSize} value={pageSize}>\n                  Show {pageSize}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div>\n            <nav\n              className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\n              aria-label=\"Pagination\"\n            >\n              <PageButton\n                className=\"rounded-l-md\"\n                onClick={() => gotoPage(0)}\n                disabled={!canPreviousPage}\n              >\n                <span className=\"sr-only\">First</span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <title id=\"pageOne\">Go to page one</title>\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M15.707 15.707a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 010 1.414zm-6 0a1 1 0 01-1.414 0l-5-5a1 1 0 010-1.414l5-5a1 1 0 011.414 1.414L5.414 10l4.293 4.293a1 1 0 010 1.414z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </PageButton>\n              <PageButton\n                onClick={() => previousPage()}\n                disabled={!canPreviousPage}\n              >\n                <span className=\"sr-only\">Previous</span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <title id=\"previousPage\">Go to previous page</title>\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </PageButton>\n              <PageButton onClick={() => nextPage()} disabled={!canNextPage}>\n                <span className=\"sr-only\">Next</span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <title id=\"nextPage\">Go to next page</title>\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </PageButton>\n              <PageButton\n                className=\"rounded-r-md\"\n                onClick={() => gotoPage(pageCount - 1)}\n                disabled={!canNextPage}\n              >\n                <span className=\"sr-only\">Last</span>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <title id=\"lastPage\">Go to last page</title>\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10.293 15.707a1 1 0 010-1.414L14.586 10l-4.293-4.293a1 1 0 111.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\n                    clipRule=\"evenodd\"\n                  />\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M4.293 15.707a1 1 0 010-1.414L8.586 10 4.293 5.707a1 1 0 011.414-1.414l5 5a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </PageButton>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useMemo } from \"react\";\nimport useData from \"../../hooks/useData\";\nimport Table from \"./Table\";\nimport\"../layouts/Mycss.css\"\n\nimport Loader from \"../../assets/imgs/loader.svg\";\n\nconst TableSection = React.memo(({ query, isOpen }) => {\n  const { data, runtime, error } = useData(query);\n\n  const columns = useMemo(() => {\n    if (data.length > 0) {\n      return Object.keys(data[0]).map((key) => {\n        const result = data[0][key]\n          .replace(/([A-Z]+)/g, \" $1\")\n          .replace(/([A-Z][a-z])/g, \" $1\");\n\n        return {\n          Header: result,\n          accessor: key,\n        };\n      });\n    }\n  }, [data]);\n\n  const queryData = useMemo(() => data.slice(1), [data]);\n  if (error)\n    return (\n      <section\n        className={`${\n          isOpen ? \"col-start-2\" : \"col-start-1\"\n        } col-end-3 row-start-3 row-end-4 text-white m-6`}\n      >\n        <h1 className=\"text-center font-bold text-xl text-primary-dark\">\n          Something Went Wrong{\" \"}\n          <span role=\"img\" aria-label=\"sad face\">\n            😔\n          </span>\n        </h1>\n      </section>\n    );\n  return (\n    <>\n      <section\n        className={`${\n          isOpen ? \"col-start-2\" : \"col-start-1\"\n        } col-end-3 row-start-3 row-end-4 text-white mx-6 my-12 lg:mx-12 overflow-hidden`}\n      >\n        {data.length > 0 ? (\n          <>\n            <p className=\"text-primary-dark\">\n              Query took:{\" \"}\n              <span className=\"font-bold text_color\">{`${runtime.toFixed(2)} ms`}</span>\n            </p>\n            <Table\n              columns={columns}\n              completeData={data}\n              data={queryData}\n              query={query}\n            />\n          </>\n        ) : (\n          <img src={Loader} className=\"w-20 mx-auto\" alt=\"loader\" />\n        )}\n      </section>\n    </>\n  );\n});\n\nexport default TableSection;\n"],"sourceRoot":""}